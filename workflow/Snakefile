#---- snakebids boilerplate

import snakebids
from snakebids import bids

configfile: 'config/snakebids.yml'

#writes inputs_config.yml and updates config dict
snakebids.generate_inputs_config(config)

#this adds constraints to the bids naming
wildcard_constraints:  **snakebids.get_wildcard_constraints(config)

report: '../workflow/report/workflow.rst'


rule all:
    input: 
        #eddy = expand(bids(root='results',datatype='dwi',suffix='dwi.nii.gz',desc='eddy',space='T1w',res=config['resample_dwi']['resample_scheme'],**config['subj_wildcards']), zip,**config['input_zip_lists']['dwi']),
        eddy_qc = expand(bids(root='results',datatype='dwi',suffix='eddy.qc_pages',**config['subj_wildcards']), zip,**config['input_zip_lists']['dwi']),
        mask_qc = expand(bids(root='qc',subject='{subject}',suffix='mask.png',desc='brain'),zip,**config['input_zip_lists']['dwi']),
        dtifit = expand(bids(root='results',datatype='dwi',suffix='dtifit',desc='eddy',space='T1w',res=config['resample_dwi']['resample_scheme'],**config['subj_wildcards']),zip,**config['input_zip_lists']['dwi']),
        bedpost = expand(bids(root='results',datatype='dwi',suffix='diffusion.bedpostX',desc='eddy',space='T1w',res=config['resample_dwi']['resample_scheme'],**config['subj_wildcards']),zip,**config['input_zip_lists']['dwi']),


include: "rules/prepdwi.smk"
include: "rules/reg_dwi_to_t1.smk"
include: "rules/masking_bet_from-b0.smk"
include: "rules/masking_b0_to_template.smk"
include: "rules/reg_t1_to_template.smk"
include: "rules/seg_t1_brain_tissue.smk"


# WIP:
#include: "rules/mask_multishell.smk"
#include: "rules/templateflow.smk"
