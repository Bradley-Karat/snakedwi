
singularity:
  prepdwi: '/project/6050199/akhanf/singularity/bids-apps/khanlab_prepdwi_latest.sif'  #should use mrtrix3.0 container instead
  ants: '/project/6050199/akhanf/singularity/ants-v2.3.1.sif'
  fsl: '/project/6050199/akhanf/singularity/bids-apps/fsl_6.0.3_cuda9.1.sif' 

#get preprocessed t1w and mask (e.g. from fmriprep)
in_t1w_preproc: '/home/akhanf/cfmm-bids/Burneo/EpLinkPhase3_Baseline/bids/sub-{subject}/anat/sub-{subject}_acq-MPRAGE_run-01_T1w.nii.gz'


#leave out extension, will grab nii.gz, bval, bvec, json (may want to change this to have nii, bvals, bvec as separate keys (e.g. to accomodate data where not all the same prefix, e.g. hcp)
in_dwi_prefix: '/home/akhanf/cfmm-bids/Burneo/EpLinkPhase3_Baseline/bids/sub-{subject}/dwi/sub-{subject}_run-{run}_dwi'

dwi_dict:
  run: 
    - '01'
    - '02'


subj_dict:
  subject:   
    - '0015'

#can use this to override bids participants.tsv - need to implement that override
participants_tsv: /path/to/participants_tsv

# Options for resampling dwi in T1w space
#  1. can resample as T1w resolution
#  2. can resample as original dwi resolution 
#  3. can resample as specified resolution

resample_dwi:
  resample_scheme: 'orig' # should be one of: ['T1w', 'orig', 'custom']
  custom_resolution: #only needed if the 'custom' 
  resample_mm: 
    - 1.0
    - 1.0
    - 1.0

#masking options, provides customization at a per subject level.. 
masking:
  default_method: 'bet_from-b0' #default method to use for brainmasking
  import_path: #only required if the import_mask - not implemented yet..
        - '/path/to/mask_to_import/sub-{subject}_mask.nii.gz'
  custom: #use this to set a custom method for a particular subject
        '0015': 'bet_from-b0_frac-4'
        #'0015': 'template_from-MNI152NLin2009cSym_reg-SyN'

template: MNI152NLin2009cSym


template_t1w: resources/tpl-{template}/tpl-{template}_res-1_T1w.nii.gz
template_mask: resources/tpl-{template}/tpl-{template}_res-1_desc-brain_mask.nii.gz 

template_atlas_dseg_nii: resources/tpl-{template}/tpl-{template}_res-1_atlas-{atlas}_dseg.nii.gz
template_atlas_dseg_tsv: resources/tpl-{template}/tpl-{template}_atlas-{atlas}_dseg.tsv

template_tissue_probseg: resources/tpl-{template}/tpl-{template}_res-1_label-{tissue}_probseg.nii.gz

#number of times to dilate  (each time 3x3x3 mode dilation)
n_atlas_dilate: 3
n_init_mask_dilate: 1 

default_k_tissue_classes: 4 #use higher than 3 to capture contrast-enhanced regions too

#use this to specify custom values for subjects, e.g. here sub-P001 will have k=4 tissue classes for Atropos initialization
subject_k_tissue_classes:
    P001: 4




tissue_labels:
  - GM
  - WM
  - CSF

atlases:
  - CerebrA


ants:
  dim: 3
  random_seed: 42 #requires ants version at least 2.3.1 (includes --random-seed option)
  intensity_opts: '-u 1 -w [0.01,0.99] -z 1'
  linear:
    reg_iterations: '1000x500x250x0'
    shrink_factors: '6x4x2x1'
    smoothing_factors: '4x2x1x0'
  deform:
    shrink_factors: '12x6x4x2x1'  # default in antsMVTC2: 6x4x2x1 
    smoothing_factors: '6x3x2x1x0vox' # default in antsMVTC2: 3x2x1x0 
    reg_iterations: '100x100x70x50x10' # default in antsMVTC2: 100x100x70x20 
    transform_model: 'SyN[0.1,3,0]'
    sim_metric: CC
  shape_update:
  gradient_step: 0.25

#we convert flags and opts automatically 
#so feel free to prescribe options that are not included here 
#as long as they are passed to eddy using --name_of_flag or --name_of_opts=value
eddy:
  flags:
    verbose: True
    repol: True
    cnr_maps: True
    residuals: True
    data_is_shelled: True
  opts:
    mporder: 6
    s2v_niter: 5
    s2v_lambda: 1
    s2v_interp: trilinear
    ol_type: 'both'  #can be sw, gw, or both (use sw if no multi-band)
    
